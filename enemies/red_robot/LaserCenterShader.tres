[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://banr6ek7e7mek"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1kgwu"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tfs44"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_17epo"]
parameter_name = "EmissionAmount"

[resource]
code = "shader_type spatial;
uniform float EmissionAmount;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// FloatParameter:4
	float n_out4p0 = EmissionAmount;


// VectorOp:3
	vec3 n_out3p0 = vec3(n_out2p0.xyz) + vec3(n_out4p0);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	EMISSION = n_out3p0;


}
"
graph_offset = Vector2(-331, -23)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_1kgwu")
nodes/fragment/2/position = Vector2(-300, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_tfs44")
nodes/fragment/3/position = Vector2(180, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_17epo")
nodes/fragment/4/position = Vector2(-180, 280)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 0, 5, 2, 0, 3, 0, 4, 0, 3, 1)
