[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://cji8tp6l4xc8m"]

[ext_resource type="Texture2D" uid="uid://vppfwnuspfqk" path="res://assets/textures/JS-Wyre-2023-03-18-05-17-48-Normal.png" id="1_u80jc"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_l3j6e"]
parameter_name = "Normal_Map_Height"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_sasn5"]
texture = ExtResource("1_u80jc")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8sgoe"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_74uee"]
parameter_name = "Emission_Speed"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_c3mtf"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f30of"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_loyb7"]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_wj8a7"]
parameter_name = "Color"
default_value_enabled = true
default_value = Color(0, 0.532848, 0.55076, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2vlsn"]
default_input_values = [0, 0.0, 1, -0.1]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_yeo0r"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_rft8o"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.0, 2, 0.025, 3, Vector3(1, 1, 1), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_4h5mf"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kbval"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_72ypr"]
parameter_name = "Transparency_Power"
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pxidq"]
constant = 0.3

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_kbvme"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8rw6n"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_yew6b"]
parameter_name = "Fresnel_Power"
default_value_enabled = true
default_value = 1.5

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_20kur"]
default_input_values = [0, 0.0, 1, 2.0, 2, 0.5]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_4wcse"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_n2ow8"]
constant = 3.0

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_af5c1"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[resource]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform float Fresnel_Power = 1.5;
uniform vec4 Color : source_color = vec4(0.000000, 0.532848, 0.550760, 1.000000);
uniform float Transparency_Power = 5;
uniform float Emission_Speed = 1;
uniform sampler2D tex_frg_14;
uniform float Normal_Map_Height = 1;



void fragment() {
// FloatParameter:5
	float n_out5p0 = Fresnel_Power;


// Fresnel:3
	float n_out3p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_out5p0);


// ColorParameter:2
	vec4 n_out2p0 = Color;


// VectorOp:4
	vec3 n_out4p0 = vec3(n_out3p0) * vec3(n_out2p0.xyz);


// FloatParameter:25
	float n_out25p0 = Transparency_Power;


// VectorDecompose:9
	float n_out9p0 = n_out2p0.x;
	float n_out9p1 = n_out2p0.y;
	float n_out9p2 = n_out2p0.z;
	float n_out9p3 = n_out2p0.w;


// MultiplyAdd:6
	float n_out6p0 = fma(n_out3p0, n_out25p0, n_out9p3);


// FloatConstant:26
	float n_out26p0 = 0.300000;


// Input:18
	vec2 n_out18p0 = UV;


// VectorDecompose:21
	float n_out21p0 = vec3(n_out18p0, 0.0).x;
	float n_out21p1 = vec3(n_out18p0, 0.0).y;
	float n_out21p2 = vec3(n_out18p0, 0.0).z;


// Input:15
	float n_out15p0 = TIME;


// FloatParameter:16
	float n_out16p0 = Emission_Speed;


// FloatOp:20
	float n_in20p1 = -0.10000;
	float n_out20p0 = n_out16p0 * n_in20p1;


// FloatOp:19
	float n_out19p0 = n_out15p0 * n_out20p0;


// FloatOp:17
	float n_in17p1 = 1.00000;
	float n_out17p0 = mod(n_out19p0, n_in17p1);


	vec3 n_out22p0;
// If:22
	float n_in22p2 = 0.02500;
	vec3 n_in22p3 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in22p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in22p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out21p1 - n_out17p0) < n_in22p2)
	{
		n_out22p0 = n_in22p3;
	}
	else if(n_out21p1 < n_out17p0)
	{
		n_out22p0 = n_in22p5;
	}
	else
	{
		n_out22p0 = n_in22p4;
	}


// FloatConstant:8
	float n_out8p0 = 3.000000;


// MultiplyAdd:7
	vec3 n_in7p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out7p0 = fma(n_out4p0, vec3(n_out8p0), n_in7p2);


// VectorOp:24
	vec3 n_out24p0 = n_out7p0 * vec3(n_out8p0);


// MultiplyAdd:23
	vec3 n_in23p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out23p0 = fma(n_out22p0, n_out24p0, n_in23p2);


// Texture2D:14
	vec4 n_out14p0 = texture(tex_frg_14, UV);


// FloatParameter:13
	float n_out13p0 = Normal_Map_Height;


// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out6p0;
	SPECULAR = n_out26p0;
	EMISSION = n_out23p0;
	NORMAL_MAP = vec3(n_out14p0.xyz);
	NORMAL_MAP_DEPTH = n_out13p0;


}
"
graph_offset = Vector2(-279.338, -18.4613)
modes/depth_draw = 1
nodes/fragment/0/position = Vector2(1360, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_wj8a7")
nodes/fragment/2/position = Vector2(-680, 520)
nodes/fragment/3/node = SubResource("VisualShaderNodeFresnel_kbvme")
nodes/fragment/3/position = Vector2(-640, 220)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_8rw6n")
nodes/fragment/4/position = Vector2(0, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_yew6b")
nodes/fragment/5/position = Vector2(-1120, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeMultiplyAdd_20kur")
nodes/fragment/6/position = Vector2(80, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeMultiplyAdd_4wcse")
nodes/fragment/7/position = Vector2(320, 400)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_n2ow8")
nodes/fragment/8/position = Vector2(0, 460)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorDecompose_af5c1")
nodes/fragment/9/position = Vector2(-220, 640)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_l3j6e")
nodes/fragment/13/position = Vector2(160, 580)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_sasn5")
nodes/fragment/14/position = Vector2(340, 740)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_8sgoe")
nodes/fragment/15/position = Vector2(-760, -400)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatParameter_74uee")
nodes/fragment/16/position = Vector2(-1040, -260)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_c3mtf")
nodes/fragment/17/position = Vector2(-180, -340)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_f30of")
nodes/fragment/18/position = Vector2(-720, -560)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_loyb7")
nodes/fragment/19/position = Vector2(-400, -340)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_2vlsn")
nodes/fragment/20/position = Vector2(-540, -220)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorDecompose_yeo0r")
nodes/fragment/21/position = Vector2(-240, -620)
nodes/fragment/22/node = SubResource("VisualShaderNodeIf_rft8o")
nodes/fragment/22/position = Vector2(140, -480)
nodes/fragment/23/node = SubResource("VisualShaderNodeMultiplyAdd_4h5mf")
nodes/fragment/23/position = Vector2(680, 0)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_kbval")
nodes/fragment/24/position = Vector2(440, 40)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatParameter_72ypr")
nodes/fragment/25/position = Vector2(-500, 40)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatConstant_pxidq")
nodes/fragment/26/position = Vector2(760, 380)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 3, 0, 4, 0, 5, 0, 3, 3, 3, 0, 6, 0, 4, 0, 7, 0, 2, 0, 9, 0, 13, 0, 0, 10, 14, 0, 0, 9, 9, 3, 6, 2, 6, 0, 0, 1, 19, 0, 17, 0, 18, 0, 21, 0, 17, 0, 22, 1, 21, 1, 22, 0, 16, 0, 20, 0, 4, 0, 0, 0, 23, 0, 0, 5, 22, 0, 23, 0, 7, 0, 24, 0, 24, 0, 23, 1, 8, 0, 24, 1, 8, 0, 7, 1, 20, 0, 19, 1, 15, 0, 19, 0, 25, 0, 6, 1, 26, 0, 0, 4)
